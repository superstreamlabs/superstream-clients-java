<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ai.superstream</groupId>
    <artifactId>superstream-clients</artifactId>
    <version>1.0.18</version>
    <packaging>jar</packaging>

    <name>Superstream Kafka Client Optimizer</name>
    <description>A Java library that dynamically optimizes Kafka client configuration based on recommendations</description>
    <url>https://github.com/superstreamlabs/superstream-clients-java</url>

    <!-- License information -->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
        <id>superstreamlabs</id>
        <name>Superstream Labs</name>
        <email>support@superstream.ai</email>
        </developer>
    </developers>    

    <!-- SCM information -->
    <scm>
        <connection>scm:git:git://github.com/superstreamlabs/superstream-clients-java.git</connection>
        <developerConnection>scm:git:ssh://github.com/superstreamlabs/superstream-clients-java.git</developerConnection>
        <url>https://github.com/superstreamlabs/superstream-clients-java</url>
    </scm>

    <!-- Distribution management -->
    <distributionManagement>
    <repository>
    <id>ai.superstream</id>
      <name>superstream</name>
      <url>https://central.sonatype.com</url>
    </repository>
  </distributionManagement>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kafka.version>3.3.2</kafka.version>
        <jackson.version>2.14.2</jackson.version>
        <bytebuddy.version>1.14.9</bytebuddy.version>
    </properties>

    <dependencies>
        <!-- Kafka Client for internal operations -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!-- ByteBuddy for bytecode manipulation -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${bytebuddy.version}</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>${bytebuddy.version}</version>
        </dependency>

        <!-- Jackson for JSON processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.3.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifestFile>src/main/resources/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <relocations>
                                <relocation>
                                    <pattern>net.bytebuddy</pattern>
                                    <shadedPattern>ai.superstream.shaded.net.bytebuddy</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.fasterxml</pattern>
                                    <shadedPattern>ai.superstream.shaded.com.fasterxml</shadedPattern>
                                </relocation>
                                <!-- Add Kafka relocation -->
                                <relocation>
                                    <pattern>org.apache.kafka</pattern>
                                    <shadedPattern>ai.superstream.shaded.org.apache.kafka</shadedPattern>
                                    <excludes>
                                        <!-- Only exclude the minimal set of interfaces needed for auth -->
                                        <exclude>org.apache.kafka.common.security.auth.AuthenticateCallbackHandler</exclude>
                                        <exclude>org.apache.kafka.common.security.auth.SaslExtensionsCallback</exclude>
                                        <exclude>org.apache.kafka.common.security.auth.SaslExtensions</exclude>
                                        <exclude>org.apache.kafka.common.security.auth.SecurityProtocol</exclude>
                                    </excludes>
                                </relocation>
                                <!-- Complete SLF4J shading -->
                                <relocation>
                                    <pattern>org.slf4j</pattern>
                                    <shadedPattern>ai.superstream.shaded.org.slf4j</shadedPattern>
                                </relocation>
                                <!-- Also shade any Logback dependencies -->
                                <relocation>
                                    <pattern>ch.qos.logback</pattern>
                                    <shadedPattern>ai.superstream.shaded.ch.qos.logback</shadedPattern>
                                </relocation>
                            </relocations>
                            <!-- Optional: Filter to transform MANIFEST files to avoid conflicts -->
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <!-- This is critical - exclude the service files -->
                                        <exclude>META-INF/services/org.slf4j.spi.SLF4JServiceProvider</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <!-- Optional: Transformer to handle service providers -->
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <!-- Source JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Javadoc JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- GPG Signing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- maven-install-plugin -->
            <plugin>
      <artifactId>maven-install-plugin</artifactId>
      <version>2.5.2</version>
    </plugin>

            <!-- central-publishing-maven-plugin -->
            <plugin>
      <groupId>org.sonatype.central</groupId>
      <artifactId>central-publishing-maven-plugin</artifactId>
      <version>0.4.0</version>
      <executions>
        <execution>
          <phase>deploy</phase>
          <goals>
            <goal>publish</goal>
          </goals>
          <configuration>
            <publishingServerId>central</publishingServerId>
            <tokenAuth>true</tokenAuth>
            <deploymentName>${project.artifactId}-${project.version}</deploymentName>
          </configuration>
        </execution>
      </executions>
    </plugin>
            <!-- Disabling the default maven-deploy-plugin -->
            <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
            <execution>
            <id>default-deploy</id>
            <phase>none</phase>
            </execution>
        </executions>
        </plugin>

            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.3</version>
            <executions>
                <execution>
                    <id>sign-artifacts</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>sign</goal>
                    </goals>
                    <configuration>
                        <keyname>A5F0A659</keyname> <!-- Your GPG key ID -->
                        <gpgArguments>
                            <arg>--batch</arg>
                        </gpgArguments>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
            <directory>../</directory>
            <includes>
                <include>README.md</include>
            </includes>
            <targetPath>.</targetPath> <!-- place it in root of jar -->
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>